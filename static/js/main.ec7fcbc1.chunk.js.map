{"version":3,"sources":["Components/CheckBoxes.js","Components/MCQ.js","Components/ShortAnswer.js","Components/FormTitle.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","padding","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","boxShadow","shadows","spacing","outline","borderRadius","input","flexDirection","compMargin","margin","text","textTransform","classes","React","useState","open","setOpen","options","setOptions","className","Input","fullWidth","name","placeholder","FormControl","component","map","val","Typography","Button","onClick","disabled","length","color","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","variant","gutterBottom","align","onSubmit","e","preventDefault","FormControlLabel","control","Checkbox","target","optionName","value","label","type","RadioGroup","Radio","title","setTitle","TextField","onKeyDown","key","FormHelperText","formControl","minWidth","card","selectEmpty","marginTop","cardContent","icons","marginRight","App","selectItem","setSelectItem","Card","CardContent","FormTitle","Box","ShortAnswer","MCQ","CheckBoxes","Select","defaultValue","MenuItem","ListItemIcon","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec7fcbc1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    padding: \"0.5rem\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: \"none\",\r\n    borderRadius: \"0.3rem\",\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"1rem\",\r\n  },\r\n  compMargin: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  text: {\r\n    textTransform: \"lowercase\",\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [options, setOptions] = React.useState([]);\r\n  const addOption = (e) => {\r\n    e.preventDefault();\r\n    setOptions([\r\n      ...options,\r\n      <FormControlLabel\r\n        control={<Checkbox name={e.target.optionName.value} />}\r\n        label={e.target.optionName.value}\r\n      />,\r\n    ]);\r\n    e.target.optionName.value = \"\";\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Input\r\n        className={classes.compMargin}\r\n        fullWidth\r\n        name=\"question\"\r\n        placeholder=\"Enter question\"\r\n      />\r\n      <FormControl component=\"fieldset\">\r\n        {options && options.map((val) => val)}\r\n      </FormControl>\r\n      <Typography className={classes.compMargin}>\r\n        Add option or{\" \"}\r\n        <Button\r\n          onClick={() => setOpen(true)}\r\n          disabled={options.length >= 5 ? true : false}\r\n          color=\"primary\"\r\n          className={classes.text}\r\n        >\r\n          {options.length >= 5 ? \"Max out\" : 'add \"Other\"'}\r\n        </Button>\r\n      </Typography>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n              Add option\r\n            </Typography>\r\n            <form onSubmit={addOption} className={classes.input}>\r\n              <Input\r\n                className={classes.compMargin}\r\n                placeholder=\"Enter option name\"\r\n                name=\"optionName\"\r\n              />\r\n              <Button\r\n                className={classes.compMargin}\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Add Option\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    padding: \"0.5rem\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: \"none\",\r\n    borderRadius: \"0.3rem\",\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: \"1rem\",\r\n  },\r\n  compMargin: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  text: {\r\n    textTransform: \"lowercase\",\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [options, setOptions] = React.useState([]);\r\n  const addOption = (e) => {\r\n    e.preventDefault();\r\n    setOptions([\r\n      ...options,\r\n      <FormControlLabel\r\n        value={e.target.optionName.value}\r\n        control={<Radio />}\r\n        label={e.target.optionName.value}\r\n      />,\r\n    ]);\r\n    e.target.optionName.value = \"\";\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Input\r\n        className={classes.compMargin}\r\n        fullWidth\r\n        name=\"question\"\r\n        placeholder=\"Enter question\"\r\n      />\r\n      <RadioGroup name=\"options\">\r\n        {options && (\r\n          <div className={classes.input}>{options.map((val) => val)}</div>\r\n        )}\r\n      </RadioGroup>\r\n      <Typography className={classes.compMargin}>\r\n        Add option or{\" \"}\r\n        <Button\r\n          onClick={() => setOpen(true)}\r\n          disabled={options.length >= 5 ? true : false}\r\n          color=\"primary\"\r\n          className={classes.text}\r\n        >\r\n          {options.length >= 5 ? \"Max out\" : 'add \"Other\"'}\r\n        </Button>\r\n      </Typography>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n              Add option\r\n            </Typography>\r\n            <form onSubmit={addOption} className={classes.input}>\r\n              <Input\r\n                className={classes.compMargin}\r\n                placeholder=\"Enter option name\"\r\n                name=\"optionName\"\r\n              />\r\n              <Button\r\n                className={classes.compMargin}\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Add Option\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    padding: \"0.5rem\",\r\n  },\r\n  compMargin: {\r\n    margin: \"0.5rem\",\r\n  },\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <form>\r\n        <Input\r\n          className={classes.compMargin}\r\n          fullWidth\r\n          name=\"question\"\r\n          placeholder=\"Enter question\"\r\n        />\r\n        <Input\r\n          className={classes.compMargin}\r\n          fullWidth\r\n          name=\"answer\"\r\n          placeholder=\"Short answer text\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nexport default () => {\r\n  const [title, setTitle] = React.useState();\r\n  return (\r\n    <div>\r\n      {title ? (\r\n        <Typography variant=\"h3\">{title}</Typography>\r\n      ) : (\r\n        <TextField\r\n          fullWidth\r\n          onKeyDown={(e) =>\r\n            e.key === \"Enter\" ? setTitle(e.target.value) : null\r\n          }\r\n        />\r\n      )}\r\n      <FormHelperText>Form description</FormHelperText>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport CheckBoxes from \"./Components/CheckBoxes\";\nimport MCQ from \"./Components/MCQ\";\nimport ShortAnswer from \"./Components/ShortAnswer\";\nimport ShortTextIcon from \"@material-ui/icons/ShortText\";\nimport RadioButtonCheckedIcon from \"@material-ui/icons/RadioButtonChecked\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport FormTitle from \"./Components/FormTitle\";\nimport Card from \"@material-ui/core/Card\";\n\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 230,\n  },\n  card: {\n    width: \"70%\",\n    margin: \"1rem\",\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  cardContent: {\n    display: \"flex\",\n    justifyContent: \"spacebetween\",\n  },\n  icons: {\n    marginRight: \"1rem\",\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const [selectItem, setSelectItem] = React.useState(\"SA\");\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card} variant=\"outlined\">\n        <CardContent>\n          <FormTitle />\n        </CardContent>\n      </Card>\n      <Card className={classes.card}>\n        <CardContent>\n          <Box\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            flexDirection=\"row\"\n          >\n            {selectItem === \"SA\" && <ShortAnswer />}\n            {selectItem === \"MCQ\" && <MCQ />}\n            {selectItem === \"CB\" && <CheckBoxes />}\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <Select defaultValue=\"SA\">\n                <MenuItem value=\"SA\" onClick={() => setSelectItem(\"SA\")}>\n                  <ListItemIcon>\n                    <ShortTextIcon className={classes.icons} /> Short answer\n                  </ListItemIcon>\n                </MenuItem>\n                <MenuItem value=\"MCQ\" onClick={() => setSelectItem(\"MCQ\")}>\n                  <ListItemIcon>\n                    <RadioButtonCheckedIcon className={classes.icons} />{\" \"}\n                    Multiple choice\n                  </ListItemIcon>\n                </MenuItem>\n                <MenuItem value=\"CB\" onClick={() => setSelectItem(\"CB\")}>\n                  <ListItemIcon>\n                    <CheckBoxIcon className={classes.icons} /> Checkboxes\n                  </ListItemIcon>\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}